<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="650b77fd-304a-4c65-a2e6-4fa0028bde9c" name="变更" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/FyneApp.toml" beforeDir="false" afterPath="$PROJECT_DIR$/FyneApp.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build.bat" beforeDir="false" afterPath="$PROJECT_DIR$/build.bat" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/licenseGenerator.exe" beforeDir="false" afterPath="$PROJECT_DIR$/licenseGenerator.exe" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$PROJECT_DIR$/../../../../../Program Files/Go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="true" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/build.bat" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/buildAPK.bat" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/gcmAesCipher/crypto.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/gcmAesCipher/crypto_test.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/main.go" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectId" id="2aTAtPQXGwruqFinyv0YsGefqV4" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="foldersAlwaysOnTop" value="false" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showExcludedFiles" value="false" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/ranja&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;
  }
}</component>
  <component name="RunManager" selected="Go 构建.go build crypto.go">
    <configuration name="go build crypto.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="licenseGenerator" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <package value="github.com/SenRanja/licenseGenerator" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/gcmAesCipher/crypto.go" />
      <method v="2" />
    </configuration>
    <configuration name="main run" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true">
      <module name="licenseGenerator" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="crypto_test.go" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="licenseGenerator" />
      <working_directory value="$PROJECT_DIR$/gcmAesCipher" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <package value="github.com/SenRanja/licenseGenerator" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/gcmAesCipher/crypto_test.go" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="github.com/SenRanja/licenseGenerator/gcmAesCipher 中的 Test_encryptGCM" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="licenseGenerator" />
      <working_directory value="$PROJECT_DIR$/gcmAesCipher" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/SenRanja/licenseGenerator/gcmAesCipher" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTest_encryptGCM\E$" />
      <method v="2" />
    </configuration>
    <configuration name="github.com/SenRanja/licenseGenerator/secretGenerator 中的 TestCipherKeyGenerator/Generate_Cipher_Key,_32bytes" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="licenseGenerator" />
      <working_directory value="$PROJECT_DIR$/secretGenerator" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/SenRanja/licenseGenerator/secretGenerator" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestCipherKeyGenerator\E$/^\QGenerate_Cipher_Key,_32bytes\E$" />
      <method v="2" />
    </configuration>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="应用程序级" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="默认任务">
      <changelist id="650b77fd-304a-4c65-a2e6-4fa0028bde9c" name="变更" comment="" />
      <created>1704788654410</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1704788654410</updated>
      <workItem from="1704788656281" duration="20000" />
      <workItem from="1705674081155" duration="3000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>